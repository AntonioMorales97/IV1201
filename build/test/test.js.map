{"version":3,"sources":["../../api/test/test.js"],"names":["chai","use","chaiHttp","expect","describe","it","done","applicant","name","request","app","post","set","send","end","err","res","status","to","equal","body","data","include","id","get","accept","should","have","property"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,iBAAKC,GAAL,CAASC,oBAAT;;IACQC,M,GAAWH,gB,CAAXG,M;AAERC,QAAQ,CAAC,+BAAD,EAAkC,YAAM;AAC9CC,EAAAA,EAAE,CAAC,+BAAD,EAAkC,UAAAC,IAAI,EAAI;AAC1C,QAAMC,SAAS,GAAG;AAChBC,MAAAA,IAAI,EAAE;AADU,KAAlB;;AAIAR,qBACGS,OADH,CACWC,iBADX,EAEGC,IAFH,CAEQ,kBAFR,EAGGC,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGC,IAJH,CAIQN,SAJR,EAKGO,GALH,CAKO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBb,MAAAA,MAAM,CAACa,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAhB,MAAAA,MAAM,CAACa,GAAG,CAACI,IAAJ,CAASC,IAAV,CAAN,CAAsBH,EAAtB,CAAyBI,OAAzB,CAAiC;AAC/BC,QAAAA,EAAE,EAAE,CAD2B;AAE/Bf,QAAAA,IAAI,EAAED,SAAS,CAACC;AAFe,OAAjC;AAIAF,MAAAA,IAAI;AACL,KAZH;AAaD,GAlBC,CAAF;AAoBAD,EAAAA,EAAE,CAAC,yBAAD,EAA4B,UAAAC,IAAI,EAAI;AACpCN,qBACGS,OADH,CACWC,iBADX,EAEGc,GAFH,CAEO,kBAFP,EAGGC,MAHH,CAGU,QAHV,EAGoB,kBAHpB,EAIGX,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBb,MAAAA,MAAM,CAACa,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBK,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,IAAtC;AACAZ,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBK,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,MAAtC;AACAtB,MAAAA,IAAI;AACL,KATH;AAUD,GAXC,CAAF;AAYD,CAjCO,CAAR","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport 'chai/register-should';\r\nimport app from '../index';\r\n\r\nchai.use(chaiHttp);\r\nconst { expect } = chai;\r\n\r\ndescribe('Testing Applicants endpoints:', () => {\r\n  it('It should create an applicant', done => {\r\n    const applicant = {\r\n      name: 'Dummy'\r\n    };\r\n\r\n    chai\r\n      .request(app)\r\n      .post('/api/applicants/')\r\n      .set('Accept', 'application/json')\r\n      .send(applicant)\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(201);\r\n        expect(res.body.data).to.include({\r\n          id: 1,\r\n          name: applicant.name\r\n        });\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('It should get all books', done => {\r\n    chai\r\n      .request(app)\r\n      .get('/api/applicants/')\r\n      .accept('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        expect(res.status).to.equal(200);\r\n        res.body.data[0].should.have.property('id');\r\n        res.body.data[0].should.have.property('name');\r\n        done();\r\n      });\r\n  });\r\n});\r\n"],"file":"test.js"}
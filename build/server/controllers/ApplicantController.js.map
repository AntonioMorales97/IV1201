{"version":3,"sources":["../../../api/server/controllers/ApplicantController.js"],"names":["util","Util","ApplicantController","req","res","ApplicantService","getAllApplicants","allApplicants","length","setSuccess","send","setError","body","name","newApplicant","addApplicant","createdApplicant","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEMC,mB;;;;;;;;;;;;oDAC0BC,G,EAAKC,G;;;;;;;;uBAEHC,6BAAiBC,gBAAjB,E;;;AAAtBC,gBAAAA,a;;AACN,oBAAIA,aAAa,CAACC,MAAd,GAAuB,CAA3B,EAA8B;AAC5BR,kBAAAA,IAAI,CAACS,UAAL,CAAgB,GAAhB,EAAqB,sBAArB,EAA6CF,aAA7C;AACD,iBAFD,MAEO;AACLP,kBAAAA,IAAI,CAACS,UAAL,CAAgB,GAAhB,EAAqB,qBAArB;AACD;;iDACMT,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd;iDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;;;;;;;qDAIeD,G,EAAKC,G;;;;;;oBACxBD,GAAG,CAACS,IAAJ,CAASC,I;;;;;AACZb,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,EAAmB,yBAAnB;kDACOX,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;AAGHU,gBAAAA,Y,GAAeX,GAAG,CAACS,I;;;uBAEQP,6BAAiBU,YAAjB,CAC7BD,YAD6B,C;;;AAAzBE,gBAAAA,gB;AAGNhB,gBAAAA,IAAI,CAACS,UAAL,CAAgB,GAAhB,EAAqB,oBAArB,EAA2CO,gBAA3C;kDACOhB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACW,QAAL,CAAc,GAAd,EAAmB,aAAMM,OAAzB;kDACOjB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;;;;;;eAKEF,mB","sourcesContent":["import ApplicantService from '../services/ApplicantService';\r\nimport Util from '../utils/Utils';\r\n\r\nconst util = new Util();\r\n\r\nclass ApplicantController {\r\n  static async getAllApplicants(req, res) {\r\n    try {\r\n      const allApplicants = await ApplicantService.getAllApplicants();\r\n      if (allApplicants.length > 0) {\r\n        util.setSuccess(200, 'Applicants retrieved', allApplicants);\r\n      } else {\r\n        util.setSuccess(200, 'No applicants found');\r\n      }\r\n      return util.send(res);\r\n    } catch (error) {\r\n      util.setError(400, error);\r\n      return util.send(res);\r\n    }\r\n  }\r\n\r\n  static async addApplicant(req, res) {\r\n    if (!req.body.name) {\r\n      util.setError(400, 'Please enter all fields');\r\n      return util.send(res);\r\n    }\r\n\r\n    const newApplicant = req.body;\r\n    try {\r\n      const createdApplicant = await ApplicantService.addApplicant(\r\n        newApplicant\r\n      );\r\n      util.setSuccess(201, 'Applicanted added!', createdApplicant);\r\n      return util.send(res);\r\n    } catch (error) {\r\n      util.setError(400, error.message);\r\n      return util.send(res);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ApplicantController;\r\n"],"file":"ApplicantController.js"}